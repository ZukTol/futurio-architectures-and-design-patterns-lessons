# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 8.0.x
        
    - name: Restore dependencies
      run: dotnet restore src/Lesson_1_2
      
    - name: Build
      run: dotnet build src/Lesson_1_2 --no-restore
      
    - name: Test
      run: dotnet test src/Lesson_1_2 --no-build --verbosity normal --collect:"XPlat Code Coverage" --results-directory src/Lesson_1_2/Coverage
    
    - name: Code Coverage Summary Report
      uses: irongut/CodeCoverageSummary@v1.3.0
      with:
        filename: 'Coverage/*/coverage.cobertura.xml'
        badge: true
        format: 'markdown'
        output: 'both'
    
    - name: Write to Job Summary
      run: cat code-coverage-results.md >> $GITHUB_STEP_SUMMARY
    
    - name: Upload dotnet test results
      uses: actions/upload-artifact@v4
      with:
        name: Lesson_1_2
        path: code-coverage-results.md
      # Use always() to always run this step to publish test results when there are test failures
      if: ${{ always() }}
